function Animations.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 0
not
pop this 0
push pointer 0
return
function Animations.drawSquare 0
push argument 0
pop pointer 0
push argument 4
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push argument 3
add
push argument 2
push argument 3
push constant 8
call Math.divide 2
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push argument 2
push argument 1
push argument 3
push constant 8
call Math.divide 2
add
push argument 2
push argument 3
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push argument 2
push constant 7
push argument 3
call Math.multiply 2
push constant 8
call Math.divide 2
add
push argument 1
push argument 3
add
push argument 2
push argument 3
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 7
push argument 3
call Math.multiply 2
push constant 8
call Math.divide 2
add
push argument 2
push argument 1
push argument 3
add
push argument 2
push argument 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Animations.drawSquareSelected 0
push argument 0
pop pointer 0
push argument 4
call Screen.setColor 1
pop temp 0
push argument 1
push argument 3
push constant 8
call Math.divide 2
add
push argument 2
push constant 9
push argument 3
call Math.multiply 2
push constant 20
call Math.divide 2
add
push argument 1
push argument 3
push constant 4
call Math.divide 2
add
push argument 2
push constant 11
push argument 3
call Math.multiply 2
push constant 20
call Math.divide 2
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 7
push argument 3
call Math.multiply 2
push constant 8
call Math.divide 2
add
push constant 3
push argument 3
call Math.multiply 2
push constant 16
call Math.divide 2
sub
push argument 2
push constant 9
push argument 3
call Math.multiply 2
push constant 20
call Math.divide 2
add
push argument 1
push constant 7
push argument 3
call Math.multiply 2
push constant 8
call Math.divide 2
add
push argument 2
push constant 11
push argument 3
call Math.multiply 2
push constant 20
call Math.divide 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Animations.drawField 6
push argument 0
pop pointer 0
push constant 1
pop local 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 0
push constant 10
lt
not
if-goto WHILE_END0
push local 0
push constant 3
eq
push local 0
push constant 6
eq
or
push local 0
push constant 9
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 0
push constant 27
call Math.multiply 2
push constant 1
sub
push constant 243
push local 0
push constant 27
call Math.multiply 2
push constant 1
add
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 27
call Math.multiply 2
push constant 1
sub
push constant 0
push local 0
push constant 27
call Math.multiply 2
push constant 1
add
push constant 243
call Screen.drawRectangle 4
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
push local 0
push constant 27
call Math.multiply 2
push constant 243
push local 0
push constant 27
call Math.multiply 2
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 27
call Math.multiply 2
push constant 0
push local 0
push constant 27
call Math.multiply 2
push constant 243
call Screen.drawRectangle 4
pop temp 0
label IF_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
pop local 0
label WHILE_EXP1
push local 0
push constant 3
lt
not
if-goto WHILE_END1
push constant 300
push constant 58
push local 0
push constant 54
call Math.multiply 2
add
push constant 462
push constant 58
push local 0
push constant 54
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 298
push local 0
push constant 54
call Math.multiply 2
add
push constant 60
push constant 298
push local 0
push constant 54
call Math.multiply 2
add
push constant 222
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP2
push local 1
push constant 9
lt
not
if-goto WHILE_END2
push local 1
push argument 1
add
pop pointer 1
push that 0
pop local 5
push local 1
push local 1
push constant 3
call Math.divide 2
push constant 3
call Math.multiply 2
sub
push constant 81
call Math.multiply 2
pop local 3
push local 1
push constant 3
call Math.divide 2
push constant 81
call Math.multiply 2
pop local 4
label WHILE_EXP3
push local 2
push constant 9
lt
not
if-goto WHILE_END3
push local 2
push local 5
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 3
push local 2
push local 2
push constant 3
call Math.divide 2
push constant 3
call Math.multiply 2
sub
push constant 27
call Math.multiply 2
add
push local 4
push local 2
push constant 3
call Math.divide 2
push constant 27
call Math.multiply 2
add
push constant 24
call Animations.DrawX 4
pop temp 0
goto IF_END1
label IF_FALSE1
push local 2
push local 5
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 3
push local 2
push local 2
push constant 3
call Math.divide 2
push constant 3
call Math.multiply 2
sub
push constant 27
call Math.multiply 2
add
push local 4
push local 2
push constant 3
call Math.divide 2
push constant 27
call Math.multiply 2
add
push constant 24
call Animations.DrawY 4
pop temp 0
label IF_FALSE2
label IF_END1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
push constant 0
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Animations.DrawMainField 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 9
lt
not
if-goto WHILE_END0
push local 0
push argument 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 300
push local 0
push local 0
push constant 3
call Math.divide 2
push constant 3
call Math.multiply 2
sub
push constant 54
call Math.multiply 2
add
push constant 60
push local 0
push constant 3
call Math.divide 2
push constant 54
call Math.multiply 2
add
push constant 50
call Animations.DrawX 4
pop temp 0
goto IF_END0
label IF_FALSE0
push local 0
push argument 1
add
pop pointer 1
push that 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 300
push local 0
push local 0
push constant 3
call Math.divide 2
push constant 3
call Math.multiply 2
sub
push constant 54
call Math.multiply 2
add
push constant 60
push local 0
push constant 3
call Math.divide 2
push constant 54
call Math.multiply 2
add
push constant 50
call Animations.DrawY 4
pop temp 0
label IF_FALSE1
label IF_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Animations.DrawX 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push argument 1
push local 0
add
push argument 2
push local 0
add
push argument 1
push local 0
add
push constant 1
add
push argument 2
push local 0
add
push argument 3
push constant 8
call Math.divide 2
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push argument 3
add
push local 0
sub
push constant 1
sub
push argument 2
push local 0
add
push argument 1
push argument 3
add
push local 0
sub
push constant 1
add
push argument 2
push local 0
add
push argument 3
push constant 8
call Math.divide 2
add
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Animations.DrawY 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push local 0
push argument 3
push constant 2
call Math.divide 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push local 0
add
push argument 2
push local 0
add
push argument 1
push local 0
add
push constant 1
add
push argument 2
push local 0
add
push argument 3
push constant 8
call Math.divide 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push argument 1
push argument 3
add
push local 0
sub
push constant 1
sub
push argument 2
push local 0
add
push argument 1
push argument 3
add
push local 0
sub
push constant 1
add
push argument 2
push local 0
add
push argument 3
push constant 8
call Math.divide 2
add
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Animations.PrintCurrentPlayer 0
push argument 0
pop pointer 0
push argument 3
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push constant 38
call Output.moveCursor 2
pop temp 0
push constant 15
call String.new 1
push constant 67
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 80
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push pointer 0
push argument 1
push argument 2
push constant 42
call Animations.ErasePlayer 4
pop temp 0
push pointer 0
push argument 1
push argument 2
push constant 35
call Animations.DrawX 4
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
push constant 38
call Output.moveCursor 2
pop temp 0
push constant 15
call String.new 1
push constant 67
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 80
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push pointer 0
push argument 1
push argument 2
push constant 42
call Animations.ErasePlayer 4
pop temp 0
push pointer 0
push argument 1
push argument 2
push constant 35
call Animations.DrawY 4
pop temp 0
label IF_END0
push constant 0
return
function Animations.ErasePlayer 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push argument 3
add
push argument 2
push argument 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
