class Tictac {
    field Array game; //массив массивов из партий
    static string curPlayer;
    field string winner;
    field Array mainGame; //всевышняя партия

    constructor Tictac new(){
        var int i;
        let curPlayer = "X";
        let game = Array.new(9);
        let mainGame = Array.new(9);
        let mainGame[[0,0]] = "";
        let i = 0;
        while (i < 9){
                let i = i + 1;
                let mainGame[i] = " "; 
            }
        while (i < 9){
            let game[i] = mainGame; //нельзя обращаться напрямую, поэтому как-то так
            let i = i + 1;
        }
        let winner = " ";
        return this;
    }

    method boolean CheckRows (Array cell) {
        var int i;
        let i = 0;
        while (i < 9){
            if (cell[i] = cell[i+1] & cell[i+1] = cell[i+2]){
                return true;
            }
            let i = i + 3;
        }
        return false;
    }

    method boolean CheckColumns (Array cell) {
        var int i;
        let i = 0;
        while (i < 3){
            if (cell[i] = cell[i+3] & cell[i+3] = cell[i+6]){
                return true;
            }
            let i = i + 1;
        }
        return false;
    }

    method boolean CheckDiag (Array cell) {
        if ((cell[0] = cell[4] & cell[4] = cell[8]) | (cell[2] = cell[4] & cell[4] = cell[6])){
            return true;
        }
        return false;
    }

    method boolean ChekWin(Array cell){
        return CheckColumns(cell) | CheckDiag(cell) | CheckRows(cell);
    }

    method void ChangePlayer(){
        if (curPlayer = "X"){
            let curPlayer = "O";
        }
        else{
            let curPlayer = "X";
        }
        return;
    }

    method void checkEndGame(){
        var int i;
        let i = 0;
        while (i < 9){
            if (ChekWin(game[i])){
                let mainGame[i] = curPlayer;
                if (ChekWin(mainGame)){
                    let winner = curPlayer;
                    return;
                }
            }
        }
        return;
    }

    method string GetWinner(){
        return winner;
    }

    method void MakeTurn(int cell, int position){
        var Array arr; //вспомогательный массив по той же причине, что сверху
        let arr = game[cell];
        let arr[position] = curPlayer;
        let game[cell] = arr;
        return;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}