//cd C:\Users\Fridmak\n2t-software-suite
//JackCompiler.bat "C:\Users\Fridmak\Desktop\TIC-TAC-TOE-9x9\игра на jack"
class Tictac {
    field Array game; //массив массивов из партий 
    static string curPlayer;
    field string winner;
    field Array mainGame; //всевышняя партия

    //IDK
    constructor Tictac new(){
        var int i;
        let curPlayer = "X";
        let game = Array.new(9);
        let mainGame = Array.new(9);
        let i = 0;
        while (i < 9){
                let mainGame[i] = " "; 
                let i = i + 1;
            }
        while (i < 9){
            let game[i] = CopyArray(mainGame); //нельзя обращаться напрямую, поэтому как-то так
            let i = i + 1;
        }

        let winner = " ";
        return this;
    }

    //DONE
    method boolean CheckRows (Array cell) {
        var int i;
        let i = 0;
        while (i < 9){
            if (cell[i] = cell[i+1] & cell[i+1] = cell[i+2]){
                return true;
            }
            let i = i + 3;
        }
        return false;
    }

    //DONE
    method boolean CheckColumns (Array cell) {
        var int i;
        let i = 0;
        while (i < 3){
            do Output.moveCursor(40,40);
            do Output.printInt(i);
            if (cell[i] = cell[i+3] & cell[i+3] = cell[i+6]){
                return true;
            }
            let i = i + 1;
        }
        return false;
    }

    //DONE
    method boolean CheckDiag (Array cell) {
        if ((cell[0] = cell[4] & cell[4] = cell[8]) | (cell[2] = cell[4] & cell[4] = cell[6])){
            return true;
        }
        return false;
    }

    //DONE
    method boolean CheckWin(int j){
        return  CheckColumns(game[j]) | CheckDiag(game[j]) | CheckRows(game[j]);
        //return false;
    }

    //DONE
    method void ChangePlayer(){
        if (curPlayer = "X"){
            let curPlayer = "O";
        }
        else{
            let curPlayer = "X";
        }
        return;
    }

    //DONE
    method void checkEndGame(){
        var int i;
        let i = 0;
        while (i < 9){
            if (CheckWin(i)){
                if (mainGame[i] = " "){
                    let mainGame[i] = curPlayer;
                }
                if (CheckWin(mainGame)){
                    let winner = curPlayer;
                    return;
                }
            }
        }
        return;
    }

    //DONE
    method string GetWinner(){
        return winner;
    }

    //DONE
    method void MakeTurn(int cell, int position){ //cell - номер поля среди 9, position - позиция в нём
        var Array arr; 
        let arr = game[cell];
        if (arr[position] = " "){
            let arr[position] = curPlayer;
        }
        let game[cell] = arr;
        return;
    }

    //DONE
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    //IDK
    method Array CopyArray(Array mainArray){
    var int i;
    var char value;
    var Array copiedArray;
    let copiedArray = Array.new(9);
      
    let i = 0;
    while (i < 9){
        let value = mainArray[i];
        let copiedArray[i] = value;
        let i = i + 1;
    }
    return copiedArray;
    }
}