//cd C:\Users\Fridmak\n2t-software-suite
//JackCompiler.bat "C:\Users\Fridmak\Desktop\TIC-TAC-TOE-9x9\игра на jack"

class Point {

    field int x, y;

    field int size;

    constructor Point new(int Ax, int Ay, int Asize) {
        let x = Ax;
        let y = Ay;
        let size = Asize;

        do drawPointer();

        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void drawPointer() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + (size / 4), y + (size / 4));
        do Screen.drawRectangle(x + (3 * size / 4), y + (3 * size / 4), x + size, y+ size);
        do Screen.drawRectangle(x + (3 * size / 4), y, x + size, y + (size / 4));
        do Screen.drawRectangle(x, y + (3 * size / 4), x + (size / 4), y + size); 
        return;
    }

    method void erasePointer() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    method void incSize() {
        if (((y + size) < 254) & ((x + size) < 510)) {
            do erasePointer();
            let size = size + 2;
            do drawPointer();
        }
        return;
    }

    method void decSize() {
        if (size > 2) {
            do erasePointer();
            let size = size - 2;
            do drawPointer();
        }
        return;
  }

    method void moveUp() {
        if (y > 2) {
            do erasePointer();
            let y = y - 2;
            do drawPointer();
        }
        return;
    }

    method void moveDown() {
        if ((y + size) < 254) {
            do erasePointer();
            let y = y + 2;
            do drawPointer();
        }
        return;
    }

    method void moveLeft() {
        if (x > 2) {
            do erasePointer();
            let x = x - 2;
            do drawPointer();
        }
        return;
    }

    method void moveRight() {
        if ((x + size) < 510) {
            do erasePointer();
            let x = x + 2;
            do drawPointer();
        }
        return;
    }
}